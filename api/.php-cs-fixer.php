<?php

return (new PhpCsFixer\Config())->setRiskyAllowed(true)->setRules([
    '@Symfony' => true,
    '@Symfony:risky' => true,
    'array_syntax' => ['syntax' => 'short'],
    'ordered_class_elements' => true,
    'ordered_imports' => true,
    'heredoc_to_nowdoc' => true,
    'php_unit_strict' => false,
    'php_unit_construct' => true,
    'phpdoc_add_missing_param_annotation' => false,
    'phpdoc_order' => true,
    'strict_comparison' => true,
    'strict_param' => true,
    'no_extra_blank_lines' => [
        'tokens' => [
            'if',
            'for',
            'foreach',
            'switch',
            'break',
            'default',
            'case',
            'continue',
            'extra',
            'return',
            'throw',
            'use',
            'parenthesis_brace_block',
            'square_brace_block',
            'curly_brace_block',
        ],
    ],
    'no_unreachable_default_argument_value' => true,
    'no_useless_else' => true,
    'no_useless_return' => true,
    'self_accessor' => false,
    'semicolon_after_instruction' => true,
    'combine_consecutive_unsets' => true,
    'date_time_immutable' => true,
    'elseif' => true,
    'fully_qualified_strict_types' => true,
    'function_declaration' => true,
    'array_push' => true,
    'array_indentation' => true,
    'align_multiline_comment' => true,
    'assign_null_coalescing_to_coalesce_equal' => true,
    'backtick_to_shell_exec' => true,
    'binary_operator_spaces' => true,
    'blank_line_after_namespace' => true,
    'blank_line_after_opening_tag' => true,
    'braces' => true,
    'visibility_required' => true,
    'blank_line_before_statement' => [
        [
            'break',
            'case',
            'continue',
            'declare',
            'default',
            'phpdoc',
            'do',
            'exit',
            'for',
            'foreach',
            'goto',
            'if',
            'include',
            'include_once',
            'require',
            'require_once',
            'return',
            'switch',
            'throw',
            'try',
            'while',
            'yield',
            'yield_from',
        ]
    ],
    'concat_space' => ['spacing' => 'none'],
])->setFinder(PhpCsFixer\Finder::create()->in(__DIR__.'/src'));
