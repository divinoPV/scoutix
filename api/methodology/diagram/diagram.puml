@startuml
package "BusinessRules" <<Node>> #FFF {
    package "Entities" <<Database>> #EEE {
        entity Activity {
            <Trait>: Blameable
            <Trait>: Idable
            <Trait>: LifeCycleable
            <Trait>: Nameable
            <Trait>: Sluggable
            <Trait>: Timestampable
            <Trait>: Uuidable

            enum: Accompagnateur Compagnons
            enum: Accompagnateur pédagogique
            enum: Aumônier de Groupe
            enum: Aumônier territorial
            enum: Chargé de mission
            enum: Chargé de mission communication
            enum: Chargé de mission intendance
            enum: Chargé de mission logistique
            enum: Chargé de mission santé
            enum: Chef d'unité
            enum: Cleophas
            enum: Délégué territorial
            enum: Impeesa
            enum: Responsable de Groupe
            enum: Responsable de Groupe Adjoint
            enum: Responsable de pôle
            enum: Responsable Farfadets
            enum: Secrétaire de Groupe
            enum: Secrétaire territorial
            enum: Trésorier de Groupe
            enum: Trésorier territorial
        }

        entity AuthorizationActivityFeature {
            <Trait>: Blameable
            <Trait>: LifeCycleable
            <Trait>: Timestampable

            -{field} activity: Activity - FPK
            -{field} feature: Feature - FPK
        }

        entity AuthorizationEventCategory {
            <Trait>: Blameable
            <Trait>: Defaultable
            <Trait>: LifeCycleable
            <Trait>: Timestampable

            -{field} activity: Activity - FPK
            -{field} category: EventCategory - FPK
        }

        entity Event {
            <Trait>: Blameable
            <Trait>: Contentable
            <Trait>: Idable
            <Trait>: LifeCycleable
            <Trait>: Mediable
            <Trait>: Periodable
            <Trait>: Sluggable
            <Trait>: Timestampable
            <Trait>: Titleable
            <Trait>: Uuidable

            -{field} author: User
            -{field} category: EventCategory
            -{field} locality: Locality
        }

        entity EventCategory {
            <Trait>: Blameable
            <Trait>: Contentable
            <Trait>: Idable
            <Trait>: LifeCycleable
            <Trait>: Sluggable
            <Trait>: Timestampable
            <Trait>: Titleable
        }

        entity EventInvitation {
            <Trait>: Blameable
            <Trait>: Contentable
            <Trait>: Idable
            <Trait>: LifeCycleable
            <Trait>: Timestampable
            <Trait>: Titleable

            -{field} event: Event
            -{field} recipient: User|Scope|Activity
            -{field} state: PublicationState
        }

        entity Feature {
            <Trait>: Blameable
            <Trait>: Idable
            <Trait>: LifeCycleable
            <Trait>: Nameable
            <Trait>: Sluggable
            <Trait>: Timestampable
            <Trait>: Uuidable
        }

        entity Locality {
            <Trait>: Blameable
            <Trait>: Idable
            <Trait>: LifeCycleable
            <Trait>: Nameable
            <Trait>: Timestampable
            <Trait>: Uuidable

            -{field} type: LocalityType
        }

        entity LocalityType {
            <Trait>: Idable
            <Trait>: Nameable

            enum: Cluster
            enum: National
            enum: Territory
            enum: Unit
        }

        entity News {
            <Trait>: Blameable
            <Trait>: Contentable
            <Trait>: Idable
            <Trait>: LifeCycleable
            <Trait>: Mediable
            <Trait>: Releasable
            <Trait>: Sluggable
            <Trait>: Tagable
            <Trait>: Timestampable
            <Trait>: Titleable
            <Trait>: Uuidable

            -{field} author: User
            -{field} category: NewsCategory
            -{field} state: PublicationState
        }

        entity NewsCategory {
            <Trait>: Blameable
            <Trait>: Idable
            <Trait>: LifeCycleable
            <Trait>: Nameable
            <Trait>: Sluggable
            <Trait>: Timestampable
        }

        entity PublicationState {
            <Trait>: Idable
            <Trait>: Nameable
            <Trait>: Sluggable

            enum: Brouillon
            enum: Publié
        }

        entity Role {
            <Trait>: Idable
            <Trait>: Nameable
            <Trait>: Sluggable

            enum: ADMIN
            enum: GUEST // optional
            enum: MODERATOR
            enum: USER
        }

        entity Scope {
            <Trait>: Idable
            <Trait>: Uuidable
            <Trait>: LifeCycleable
            <Trait>: Timestampable
            <Trait>: Blameable

            -{field} activity: Activity
            -{field} locality: Locality
        }

        entity ScopeUser {
            <Trait>: Blameable
            <Trait>: LifeCycleable
            <Trait>: Timestampable

            -{field} scope: Scope - FPK
            -{field} user: User - FPK
        }

        entity User {
            <Trait>: Addressable
            <Trait>: Birthdable
            <Trait>: Blameable
            <Trait>: Communicable
            <Trait>: Genderable
            <Trait>: Idable
            <Trait>: LifeCycleable
            <Trait>: Nameable
            <Trait>: Timestampable
            <Trait>: Uploadable
            <Trait>: Usernameable
            <Trait>: Uuidable

            -{field} role: Role
        }

        AuthorizationActivityFeature "Many" o--* "One" Activity: need
        AuthorizationActivityFeature "Many" o--* "One" Feature: have

        AuthorizationEventCategory "Many" o--* "One" Activity: need
        AuthorizationEventCategory "Many" o--* "One" EventCategory: have

        Event "Many" o--* "One" EventCategory: own
        Event "Many" o--* "One" Locality: own
        Event "Many" o--* "One" PublicationState: have
        Event "Many" o--* "One" User: written

        EventInvitation "Many" o--* "One" Activity: send
        EventInvitation "Many" o--* "One" Event: own
        EventInvitation "Many" o--* "One" Scope: send
        EventInvitation "Many" o--* "One" User: send

        Locality "Many" o--* "One" LocalityType: own

        News "Many" o--* "One" NewsCategory: own
        News "Many" o--* "One" PublicationState: have
        News "Many" o--* "One" User: written

        Scope "Many" o--* "One" Activity: have
        Scope "Many" o--* "One" Locality: have

        ScopeUser "Many" o--* "One" Scope: have
        ScopeUser "Many" o--* "One" User: have

        User "Many" o--* "One" Activity: blamed
        User "Many" o--* "One" AuthorizationActivityFeature: blamed
        User "Many" o--* "One" AuthorizationEventCategory: blamed
        User "Many" o--* "One" Event: blamed
        User "Many" o--* "One" EventCategory: blamed
        User "Many" o--* "One" EventInvitation: blamed
        User "Many" o--* "One" Feature: blamed
        User "Many" o--* "One" Locality: blamed
        User "Many" o--* "One" News: blamed
        User "Many" o--* "One" NewsCategory: blamed
        User "Many" o--* "One" Role: have
        User "Many" o--* "One" Scope: blamed
    }
}
@enduml
